name: Project check

on:
  push:
    branches:
      - '*'

jobs:
#  front:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 18.x ]
#        os: [ ubuntu-latest ]
#
#    defaults:
#      run:
#        working-directory: ./frontend
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - run: npm install -g @vue/cli-service-global
#      - name: project check
#        run: |
#          npm i
#          npm run build
#          npm run lint
#          npm run test:unit
#
#  back:
#
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ./backend
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml

  publish-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: eddir/corp-messenger-restapp

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/moon/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-frontent:
    runs-on: ubuntu-latest
#    needs: [ front, back ]
    steps:
      - uses: actions/checkout@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: eddir/corp-messenger-webapp

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/nginx/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Invoke deployment hook
#        uses: distributhor/workflow-webhook@v2
#        env:
#          webhook_url: ${{ secrets.WEBHOOK_URL }}
#          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}