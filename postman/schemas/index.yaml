openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Corp Messenger API'
  description: Retrieve and send messages

paths:
  /api/auth/register/:
    post:
      summary: Регистрация нового пользователя
      description: Регистрация нового пользователя в системе
      operationId: registerUser
      requestBody:
        description: Данные для регистрации нового пользователя
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Пользователь с таким username уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/auth/login/:
    post:
      summary: "Авторизация"
      description: "Авторизация пользователя в системе и получение токена"
      parameters: [
        {
          "name": "username",
          "in": "query",
          "description": "Имя пользователя, который проходит авторизацию",
          "required": true,
          "schema":
            "type": "string"
        },
        {
          "name": "password",
          "in": "query",
          "description": "Пользовательский пароль",
          "required": true,
          "schema":
            "type": "string"
        }
      ]
      responses:
        200:
          description: "Авторизация прошла успешно"
          content:
            application/json:
            schema:
              type: object
              properties: [
                {
                  "name": "accessToken",
                  "type": "string",
                  "description": "Токен доступа JWT"
                },
                {
                  "name": "refreshToken",
                  "type": "string",
                  "description": "Токен обновления"
                }
              ]
        401:
          description: "Неверный логин или пароль"
          content:
            application/json:
            schema:
              $ref: "#/components/schemas/Error"
  /api/auth/renew/:
    post:
      summary: "Обновление токена"
      description: "Обновление токена доступа"
      parameters: [
        {
          "name": "refreshToken",
          "in": "query",
          "description": "Токен обновления",
          "required": true,
          "schema":
            "type": "string"
        }
      ]
      responses:
        200:
          description: "Токен обновлен"
          content:
            application/json:
            schema:
              type: object
              properties: [
                {
                  "name": "accessToken",
                  "type": "string",
                  "description": "Токен доступа JWT"
                },
                {
                  "name": "refreshToken",
                  "type": "string",
                  "description": "Токен обновления"
                }
              ]
        401:
          description: "Неверный токен обновления"
          content:
            application/json:
            schema:
              $ref: "#/components/schemas/Error"

components:
  schemas:
    User:
      type: object
      required:
        - username
        - password
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
          format: password
        company_id:
          type: integer
          format: string
          description: ID компании, к которой принадлежит пользователь (шестнадцатеричный UUID)
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: [ ]